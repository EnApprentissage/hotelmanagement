# Generated by Django 5.2.5 on 2025-10-30 07:29

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Employe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('date_naissance', models.DateField()),
                ('lieu_naissance', models.CharField(blank=True, max_length=100)),
                ('nationalite', models.CharField(max_length=50)),
                ('etat_civil', models.CharField(choices=[('celibataire', 'Célibataire'), ('marie', 'Marié(e)'), ('divorce', 'Divorcé(e)'), ('veuf', 'Veuf/Veuve')], max_length=20)),
                ('adresse', models.TextField()),
                ('ville', models.CharField(max_length=100)),
                ('pays', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('poste', models.CharField(max_length=100)),
                ('departement', models.CharField(max_length=100)),
                ('date_embauche', models.DateField()),
                ('salaire', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cv', models.FileField(blank=True, null=True, upload_to='cv_employes/')),
                ('contrat', models.FileField(blank=True, null=True, upload_to='contrats/')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photos_employes/')),
                ('contact_urgence_nom', models.CharField(blank=True, max_length=100)),
                ('contact_urgence_phone', models.CharField(blank=True, max_length=20)),
                ('contact_urgence_relation', models.CharField(blank=True, max_length=50)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employe', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Employé',
                'verbose_name_plural': 'Employés',
                'db_table': 'employes',
            },
        ),
        migrations.CreateModel(
            name='Conge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_conge', models.CharField(choices=[('conge_annuel', 'Congé annuel'), ('conge_maladie', 'Congé maladie'), ('conge_maternite', 'Congé maternité'), ('conge_sans_solde', 'Congé sans solde'), ('absence', 'Absence')], max_length=20)),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('nombre_jours', models.IntegerField()),
                ('motif', models.TextField()),
                ('statut', models.CharField(choices=[('en_attente', 'En attente'), ('approuve', 'Approuvé'), ('refuse', 'Refusé')], default='en_attente', max_length=20)),
                ('date_demande', models.DateTimeField(auto_now_add=True)),
                ('approuve_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conges_approuves', to=settings.AUTH_USER_MODEL)),
                ('employe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conges', to='staff.employe')),
            ],
            options={
                'db_table': 'conges',
                'ordering': ['-date_demande'],
            },
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_evaluation', models.DateField()),
                ('periode_evaluee', models.CharField(max_length=100)),
                ('objectifs', models.TextField()),
                ('realisations', models.TextField()),
                ('points_forts', models.TextField(blank=True)),
                ('points_amelioration', models.TextField(blank=True)),
                ('note_globale', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('commentaires', models.TextField(blank=True)),
                ('employe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='staff.employe')),
                ('evaluateur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'evaluations',
                'ordering': ['-date_evaluation'],
            },
        ),
        migrations.CreateModel(
            name='Incident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_incident', models.DateField()),
                ('type_incident', models.CharField(choices=[('retard', 'Retard'), ('absence', 'Absence injustifiée'), ('comportement', 'Problème de comportement'), ('performance', 'Performance insuffisante'), ('autre', 'Autre')], max_length=20)),
                ('description', models.TextField()),
                ('sanction', models.CharField(blank=True, choices=[('avertissement', 'Avertissement verbal'), ('blame', 'Blâme écrit'), ('suspension', 'Suspension'), ('mise_pied', 'Mise à pied')], max_length=20)),
                ('date_sanction', models.DateField(blank=True, null=True)),
                ('employe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incidents', to='staff.employe')),
                ('signale_par', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'incidents',
                'ordering': ['-date_incident'],
            },
        ),
        migrations.CreateModel(
            name='Planning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('periode', models.CharField(choices=[('jour', 'Jour (06h-14h)'), ('soir', 'Soir (14h-22h)'), ('nuit', 'Nuit (22h-06h)')], max_length=10)),
                ('heure_debut', models.TimeField()),
                ('heure_fin', models.TimeField()),
                ('poste_assigne', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('employe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plannings', to='staff.employe')),
            ],
            options={
                'db_table': 'plannings',
                'ordering': ['date', 'heure_debut'],
                'unique_together': {('employe', 'date', 'periode')},
            },
        ),
        migrations.CreateModel(
            name='Pointage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('heure_arrivee', models.TimeField()),
                ('heure_depart', models.TimeField(blank=True, null=True)),
                ('retard_minutes', models.IntegerField(default=0)),
                ('heures_travaillees', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('notes', models.TextField(blank=True)),
                ('employe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pointages', to='staff.employe')),
            ],
            options={
                'db_table': 'pointages',
                'ordering': ['-date'],
                'unique_together': {('employe', 'date')},
            },
        ),
    ]
